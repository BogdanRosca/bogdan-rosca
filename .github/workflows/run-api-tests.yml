name: Run API tests

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  run-api-tests:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
        
    - name: Install Maven
      run: |
        sudo apt-get update
        sudo apt-get install -y maven
  
    - name: Checkout Swagger Petstore API
      run: |
        git clone https://github.com/swagger-api/swagger-petstore.git petstore-api
    
    - name: Build Petstore API
      run: |
        cd petstore-api
        mvn package

    - name: Start Petstore API in background
      run: |
        cd petstore-api
        nohup mvn jetty:run > jetty.log 2>&1 &
        echo "Jetty server started in background"
        sleep 10

    - name: Check if API is running
      uses: ./.github/actions/check-api-is-running
      with:
        url: http://localhost:8080/api/v3/store/inventory
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        cd api-test-automation
        pip install -e .
    
    - name: Run API tests
      run: |
        cd api-test-automation
        echo "Starting API Test Execution" 
        pytest --html=reports/report.html --self-contained-html --tb=short || true
        
        if [ -f reports/report.html ]; then
          echo "✅ HTML report generated"
        else
          echo "❌ HTML report generation failed"
        fi
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: api-test-report.html
        path: api-test-automation/reports/report.html
        retention-days: 7 
        
    - name: Comment PR with test results link
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const artifactUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}/report.html`;
          
          const comment = `## 🧪 API Test Results
          
          📊 **Test execution completed!**
          
          📄 **HTML report:** [Report link](${artifactUrl})
          
          📋 **File:** \`api-test-report.html\`
          
          ---
          *This comment was automatically generated by the API test run.*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
        